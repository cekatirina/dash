import streamlit as st
st.set_page_config(layout="wide")

import pandas as pd
import plost
import pickle
import sklearn
import shap
import matplotlib.pyplot as plt
from shapash.explainer.smart_explainer import SmartExplainer

with open('style.css') as f:
        st.markdown(f'<style>{f.read()}</style>', unsafe_allow_html=True)

df = pd.read_csv('https://raw.githubusercontent.com/cekatirina/data/master/X_test.csv')
y = pd.read_csv('https://raw.githubusercontent.com/cekatirina/data/master/y_test.csv')
df_prob = pd.read_csv('https://raw.githubusercontent.com/cekatirina/data/master/X_test_prob.csv')
modelGB = pickle.load(open('modelGB.pkl', 'rb'))
prediction = modelGB.predict(df)
prediction_proba = modelGB.predict_proba(df)
explainer = shap.Explainer(modelGB)
shap_values = explainer.shap_values(df)

example1 = df.iloc[1432]
example1 = example1.to_numpy()

example2 = df.iloc[3842]
example2 = example2.to_numpy()

tab1, tab2 = st.tabs(["–î—ç—à–±–æ—Ä–¥", "–ê–Ω–∫–µ—Ç–∞"])

with tab1:
        st.title('–û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –º–æ–¥–µ–ª–∏')
        st.write('This is gonna be XAI dashboard')
        
        # Row A
        vars = [['education', '–£—Ä–æ–≤–µ–Ω—å –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞'], ['gender', '–ü–æ–ª —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞'], 
                ['no_of_trainings', '–ö–æ–ª-–≤–æ —Ç—Ä–µ–Ω–∏–Ω–≥–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ –ø—Ä–æ—à–µ–ª —Å–æ—Ç—Ä—É–¥–Ω–∏–∫ –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–π –≥–æ–¥'],
                ['avg_training_score', '–°—Ä–µ–¥–Ω—è—è –æ—Ü–µ–Ω–∫–∞ –∑–∞ –ø—Ä–æ–π–¥–µ–Ω–Ω—ã–µ —Ç—Ä–µ–Ω–∏–Ω–≥–∏'], ['age', '–í–æ–∑—Ä–∞—Å—Ç —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞'], 
                ['previous_year_rating', '–†–µ–π—Ç–∏–Ω–≥ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞ –∑–∞ –ø—Ä–æ—à–ª—ã–π –≥–æ–¥'],
                ['length_of_service', '–ö–æ–ª-–≤–æ –ª–µ—Ç, –∫–æ—Ç–æ—Ä–æ–µ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç –≤ –∫–æ–º–ø–∞–Ω–∏–∏'], ['awards_won', '–ö–æ–ª-–≤–æ –≤—ã–∏–≥—Ä–∞–Ω–Ω—ã—Ö –Ω–∞–≥—Ä–∞–¥'],
                ['department_', '–û—Ç–¥–µ–ª, –≤ –∫–æ—Ç–æ—Ä–æ–º —Ä–∞–±–æ—Ç–∞–µ—Ç —Å–æ—Ç—Ä—É–¥–Ω–∏–∫'], ['recruitment_channel_', '–ö–∞–∫ —á–µ–ª–æ–≤–µ–∫ –ø–æ–ø–∞–ª –≤ –∫–æ–º–ø–∞–Ω–∏—é (referred - —á–µ—Ä–µ–∑ —Ä–µ—Ñ–µ—Ä–∞–ª—å–Ω—É—é –ø—Ä–æ–≥—Ä–∞–º–º—É, sourcing - –æ–±—ã—á–Ω—ã–π –ø–æ–∏—Å–∫ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤)']]
        vars_df = pd.DataFrame(vars, columns=['–ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è', '–û–ø–∏—Å–∞–Ω–∏–µ'])
        col1, col2 = st.columns(2)
        with col1:
                st.markdown('### –û–ø–∏—Å–∞–Ω–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö')
                st.table(vars_df)
        with col2:
                st.markdown('### –í–∞–∂–Ω–æ—Å—Ç—å –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö')
                plt.title('Feature importance based on SHAP values')
                plt.xlabel("–°—Ä–µ–¥–Ω–µ–µ SHAP value")
                shap.summary_plot(shap_values, df, plot_type='bar')
                st.pyplot()
        
        # Row B
        st.markdown('### –í–∞–∂–Ω–æ—Å—Ç—å –ø—Ä–µ–¥–∏–∫—Ç–æ—Ä–æ–≤')
        plt.title('Feature contribution based on SHAP values')
        shap.dependence_plot("avg_training_score", shap_values, df, feature_names=df.columns, interaction_index="gender")
        st.pyplot()

        # Row C
        st.title('–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø–æ –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–º –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏—è–º')
        c1, c2 = st.columns(2)
        with c1:
                st.markdown('### –ö–µ–π—Å 1 (ID = 1432)')
                shap.waterfall_plot(shap.Explanation(values=shap_values[1432],
                            base_values=explainer.expected_value[0],
                            data=example1,
                            feature_names=df.columns))
                st.pyplot()
        with c2:
                st.markdown('### –ö–µ–π—Å 2 (ID = 3842)')
                shap.waterfall_plot(shap.Explanation(values=shap_values[3842],
                            base_values=explainer.expected_value[0],
                            data=example2,
                            feature_names=df.columns))
                st.pyplot()

with tab2:
        st.title('Best Dashüíñ')
        ANSWER_OPTIONS = [
            "1",
            "2",
            "3",
            "4",
            "5",
        ]
        with st.form(key="dash_form"):
            name = st.text_input(label="–§–ò–û")
            st.write('<style>div.row-widget.stRadio > div{flex-direction:row;}</style>', unsafe_allow_html=True)    
            dificulty = st.radio(
                    "–ù–∞—Å–∫–æ–ª—å–∫–æ —Å–ª–æ–∂–Ω–æ –±—ã–ª–æ...",
                    ["1", "2", "3", "4", "5"])        
            submit_button = st.form_submit_button(label="–û—Ç–ø—Ä–∞–≤–∏—Ç—å –∞–Ω–∫–µ—Ç—É")
